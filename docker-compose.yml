services:

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

    environment:

      RABBITMQ_DEFAULT_USER: ${RMUSER}
      RABBITMQ_DEFAULT_PASS: ${RMPASS}

    networks:

      - social
    volumes:
      - ./rabbitmq/rabbit_data/:/var/lib/rabbitmq/
      - ./rabbitmq/rabbit_log/:/var/log/rabbitmq/
    restart: on-failure

  redis:
    image: redis:7.4.1-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/data
    networks:
      - social
    restart: on-failure

  django:
    build: .
    command: >
      sh -c 'python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn core.wsgi --bind 0.0.0.0:8000'
    volumes:
      - ./core:/app
      - static_volume:/app/static
      - media_volume:/app/media
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}

    networks:
      - social
    depends_on:
      - rabbitmq
      - redis
      - db
    restart: always
  db:
    image: postgres:16
    container_name: db
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: unless-stopped
    networks:
      - social
  worker:
    build: .
    command: celery -A core worker --loglevel=info
    volumes:
      - ./core:/app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}

    depends_on:
      - rabbitmq
      - django
    restart: on-failure

    networks:
      - social

  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - '8080:80'
      - '25:25'
      - '143:143'
    volumes:
        - smtp4dev-data:/smtp4dev
    environment:

    - ServerOptions__Urls=http://*:80
    - ServerOptions__HostName=smtp4dev
    depends_on:
      - django
    networks:
      - social
  nginx:
    image: nginx
    ports:
      - "80:80"
    depends_on:
      - django
    restart: always
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    networks:
      - social
volumes:
  smtp4dev-data:
  static_volume:
  media_volume:
  pgdata:


networks:
  social:
    name: social
    driver: bridge
